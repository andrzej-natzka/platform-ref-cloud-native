apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: gke.clusters.cloudnative.platformref.crossplane.io
  labels:
    provider: GCP
spec:
  writeConnectionSecretsToNamespace: upbound-system
  compositeTypeRef:
    apiVersion: cloudnative.platformref.crossplane.io/v1alpha1
    kind: GKE
  resources:
    - base:
        apiVersion: compute.gcp.crossplane.io/v1beta1
        kind: Network
        spec:
          forProvider:
            autoCreateSubnetworks: false
            routingConfig:
              routingMode: REGIONAL
          reclaimPolicy: Delete
    - base:
        apiVersion: compute.gcp.crossplane.io/v1beta1
        kind: Subnetwork
        spec:
          forProvider:
            region: us-west2
            networkSelector:
              # This selector ensures this Subnetwork will select and use the
              # above Network. They will both be part of the XR, and thus their
              # controller references will match.
              matchControllerRef: true
            privateIpGoogleAccess: true
            ipCidrRange: 172.16.0.0/16
            secondaryIpRanges:
              - rangeName: pods
                ipCidrRange: 10.200.0.0/14
              - rangeName: services
                ipCidrRange: 10.204.0.0/16
          reclaimPolicy: Delete
    - base:
        apiVersion: container.gcp.crossplane.io/v1beta1
        kind: GKECluster
        spec:
          forProvider:
            initialClusterVersion: "1.18"
            location: us-west2
            masterAuth:
              # setting this master auth user name enables basic auth so that a client (e.g.,
              # provider-helm), can connect with the generated kubeconfig from the connection secret
              username: admin
            masterAuthorizedNetworksConfig:
              enabled: false
            ipAllocationPolicy:
              useIpAliases: true
              clusterSecondaryRangeName: pods
              servicesSecondaryRangeName: services
            networkConfig:
              enableIntraNodeVisibility: true
            networkSelector:
              matchControllerRef: true
            subnetworkSelector:
              matchControllerRef: true
            loggingService: logging.googleapis.com/kubernetes
            monitoringService: monitoring.googleapis.com/kubernetes
            addonsConfig:
              gcePersistentDiskCsiDriverConfig:
                enabled: true
      patches:
        - fromFieldPath: metadata.uid
          toFieldPath: spec.writeConnectionSecretToRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-gkecluster"
        - fromFieldPath: spec.writeConnectionSecretToRef.namespace
          toFieldPath: spec.writeConnectionSecretToRef.namespace
      # The control plane supplies the 'kubeconfig' connection secret key, which
      # is required by the XR.
      connectionDetails:
        - fromConnectionSecretKey: kubeconfig
    # Each cluster has one node pool. Its nodes are spread evenly across the zones
    # in which the cluster exists.
    - base:
        apiVersion: container.gcp.crossplane.io/v1alpha1
        kind: NodePool
        spec:
          forProvider:
            location: us-west2
            initialNodeCount: 1
            clusterSelector:
              # Attach this node pool to the GKECluster created above.
              matchControllerRef: true
            autoscaling:
              enabled: true
            config:
              diskType: pd-standard
              diskSizeGb: 100
              imageType: COS
              preemptible: true
              shieldedInstanceConfig:
                enableIntegrityMonitoring: true
                enableSecureBoot: true
              metadata:
                disable-legacy-endpoints: "true"
              oauthScopes:
                - https://www.googleapis.com/auth/cloud-platform
            management:
              autoRepair: true
              autoUpgrade: false
            maxPodsConstraint:
              maxPodsPerNode: 55
          reclaimPolicy: Delete
      patches:
        # Derive the node count and type of this node pool from the XR. Note that
        # the XR's node count is set to initial, min, and max.
        - fromFieldPath: spec.nodes.size
          toFieldPath: spec.forProvider.config.machineType
          transforms:
            - type: map
              map:
                small: n1-standard-4
                medium: n1-standard-16
                large: n1-standard-32
        - fromFieldPath: spec.nodes.count
          toFieldPath: spec.forProvider.initialNodeCount
        - fromFieldPath: spec.nodes.count
          toFieldPath: spec.forProvider.autoscaling.minNodeCount
        - fromFieldPath: spec.nodes.count
          toFieldPath: spec.forProvider.autoscaling.maxNodeCount
    - base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: ProviderConfig
        spec:
          credentials:
            source: Secret
            secretRef:
              key: kubeconfig
      patches:
        - fromFieldPath: spec.clusterName
          toFieldPath: metadata.name
        - fromFieldPath: spec.writeConnectionSecretToRef.namespace
          toFieldPath: spec.credentials.secretRef.namespace
        # This ProviderConfig uses the above GKE cluster's connection secret as
        # its credentials secret.
        - fromFieldPath: "metadata.uid"
          toFieldPath: spec.credentials.secretRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-gkecluster"
      readinessChecks:
        - type: None
